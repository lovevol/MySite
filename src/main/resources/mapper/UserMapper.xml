<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.UserMapper">
    <!--使用自定义的类型转换器需呀手动设置结果映射-->
    <resultMap id="userMap" type="model.User">
        <id column="iduser" property="idUser"/>
        <result column="loginname" property="loginName"/>
        <result column="username" property="userName"/>
        <result column="password" property="password"/>
        <result column="gender" property="gender" typeHandler="mybatisTypeHandler.MyGenderTypeHandler"/>
        <result column="roletype" property="roleType"/>
        <result column="email" property="email"/>
        <result column="validatecode" property="validateCode"/>
        <result column="status" property="status"/>
        <result column="validatedate" property="validateDate"/>
    </resultMap>
    <select id="selectUserByLoginName" parameterType="string" resultMap="userMap">
        SELECT * FROM user WHERE loginname = #{loginName}
    </select>
    <insert id="save" parameterType="model.User" useGeneratedKeys="true" keyProperty="idUser">
        INSERT INTO user(username, loginname,password, gender,roletype,email,validatecode,status,validatedate) VALUES(#{userName},#{loginName},#{password},#{gender,typeHandler=mybatisTypeHandler.MyGenderTypeHandler},#{roleType},#{email},#{validateCode},#{status},#{validateDate})
    </insert>
    <!--批量插入-->
    <insert id="saveUserByBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="idUser">
        INSERT INTO user(username, loginname,password, gender,roletype,email,validatecode,status,validatedate) VALUES
            <foreach collection="list" index="index" item="user" separator=",">
                (#{user.userName},#{user.loginName},#{user.password},#{user.gender,typeHandler=mybatisTypeHandler.MyGenderTypeHandler},#{user.roleType},#{user.email},#{user.validateCode},#{user.status},#{user.validateDate})
            </foreach>
    </insert>
    <select id="selectUserById" parameterType="int" resultMap="userMap">
        SELECT * FROM user WHERE iduser = #{id}
    </select>
    <update id="updateUserById" parameterType="model.User">
        UPDATE user
        SET username = #{userName},password = #{password},age = #{age}
        WHERE id = #{id}
    </update>
    <delete id="deleteUserById" parameterType="int">
        DELETE FROM user WHERE id = #{id}
    </delete>
    <select id="updateUserByIdAndValidateCode" parameterType="model.User" resultMap="userMap">
       UPDATE user set status = 1 WHERE iduser = #{idUser} and validatecode = #{validateCode}
    </select>
    <select id="getUser" resultMap="userMap">
        select * from user
    </select>
    <update id="updateUser" parameterType="model.User">
        UPDATE user
        <set>
            <if test="userName != null">
                username = #{userName},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="validateCode != null">
                validatecode = #{validateCode},
            </if>
            <if test="validateDate != null">
                validatedate = #{validateDate}
            </if>
        </set>
        where iduser = #{idUser}
    </update>
</mapper>